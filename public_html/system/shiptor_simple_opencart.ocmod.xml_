<?xml version="1.0" encoding="utf-8"?>
<modification>
<name>Shiptor - Агрегатор служб доставки</name>
<version>3.3.1</version>
<author>Kuznetsov Bogdan</author>
<link>https://shiptor.ru</link>
<code>shiptor_simple_opencart</code>

<file path="catalog/controller/checkout/simplecheckout_shipping_address.php">
	<operation error="skip">
		<search trim="true"><![CDATA[$address = $this->session->data['simple']['shipping_address'];]]></search>
		<add position="after"><![CDATA[

		/* Shiptor - агрегатор доставки */
		if (!$this->customer->isLogged()) {
			if((!empty($this->session->data['simple']['shipping_address']['city']) && ($this->session->data['validate_kladr'] == 1)) || (!empty($this->session->data['simple']['shipping_address']['city']) && !isset($this->session->data['shiptor']['kladr_id']))){
				
					$kladr = $this->getKladrId($this->session->data['simple']['shipping_address']);
					
					if(isset($kladr['kladr_id'])){
						$this->session->data['shiptor']['kladr_id'] = $kladr['kladr_id'];
					}else{
						unset($this->session->data['shiptor']['kladr_id']);
					}

					/* Если есть город по умолчанию выставляем ему регион*/
					if(isset($this->session->data['simple']['shipping_address']['iso_code_2'])){
						$params['country_code'] = $this->session->data['simple']['shipping_address']['iso_code_2'];
					}
					$params['query'] = $this->session->data['simple']['shipping_address']['city'];
					$results = $this->shiptor->suggestSettlement($params);
					
					$searchCity = strtolower($this->session->data['simple']['shipping_address']['city']);
					
					foreach($results as $suggest){
						if($searchCity==strtolower($suggest['name'])){
							if($suggest['readable_parents']!=''){
								$query_region = $this->db->query("SELECT zone_id FROM " . DB_PREFIX . "zone WHERE name = '" . $suggest['readable_parents'] . "' AND status = '1'");
								if ($query_region->num_rows) {
									$this->session->data['simple']['shipping_address']['zone_id'] = $query_region->row['zone_id'];
								}
							}
						}
					}
					if(!isset($this->session->data['shiptor']['kladr_id'])){
						$this->session->data['simple']['shipping_address']['city'] = 'Москва';
						$query = $this->db->query("SELECT zone_id FROM " . DB_PREFIX . "zone WHERE name = '" . $this->session->data['simple']['shipping_address']['city'] . "' AND status = '1'");
						
						$this->session->data['simple']['shipping_address']['zone_id'] = $query->row['zone_id'];
						
						$kladr_else = $this->getKladrId($this->session->data['simple']['shipping_address']);
						
						$this->session->data['simple']['payment_address'] = $this->session->data['simple']['shipping_address'];
						$this->session->data['shiptor']['kladr_id'] = $kladr_else['kladr_id'];
					}
			}elseif(empty($this->session->data['simple']['shipping_address']['city'])){
				
				/* Если пустой город ставим "Москва" */
				$this->session->data['simple']['shipping_address']['city'] = 'Москва';
				$query = $this->db->query("SELECT zone_id FROM " . DB_PREFIX . "zone WHERE name = '" . $this->session->data['simple']['shipping_address']['city'] . "' AND status = '1'");
				
				$this->session->data['simple']['shipping_address']['zone_id'] = $query->row['zone_id'];
				
				$kladr = $this->getKladrId($this->session->data['simple']['shipping_address']);
				
				$this->session->data['simple']['payment_address'] = $this->session->data['simple']['shipping_address'];
				$this->session->data['shiptor']['kladr_id'] = $kladr['kladr_id'];
			
			}
		}
		/* Shiptor - агрегатор доставки */

		]]></add>
	</operation>
	<operation error="skip">
		<search trim="true"><![CDATA[public function update_session() {]]></search>
		<add position="before"><![CDATA[
		public function getKladrId($address = array()){
		
		if(!empty($address['zone_id'])){
			$this->load->model('localisation/zone');
			$zone = $this->model_localisation_zone->getZone($address['zone_id']);
			$zone = mb_strtolower($zone['name']);
			$zone = trim(str_replace($this->cleanAreas,'',$zone));
		}
		 
		$results = $this->shiptor->suggestSettlement(array('query' => trim($address['city']),'country_code'=>$address['iso_code_2']));
		$searchCity = strtolower($address['city']);
		$result = false;
		foreach($results as $suggest){
			if($result==false && $searchCity==strtolower($suggest['name'])){
				if($suggest['readable_parents']!=''){
					return $suggest;
				}
				else {
					if(isset($zone) && trim(mb_strtolower($suggest['name']))==$zone)return $suggest;
					else {
						if(!isset($zone))return $suggest;
					}
				}
			}
		}
		return $result;
	}
		]]></add>
	</operation>
		<operation error="skip">
		<search trim="true"><![CDATA[class ControllerCheckoutSimpleCheckoutShippingAddress extends SimpleController {]]></search>
		<add position="after"><![CDATA[public function __construct($registry) {
		parent::__construct($registry);
		
		$registry->set('shiptor', new Shiptor($registry));
		}]]></add>
	</operation>
	
</file>	

<file path="catalog/controller/checkout/simplecheckout_shipping.php">
	<operation error="skip">
		<search trim="true"><![CDATA[foreach ($results as $result) {]]></search>
		<add position="before"><![CDATA[

		/* Shiptor - агрегатор доставки */
		
		$this->_templateData['shiptor_total_status'] = $this->config->get('shiptor_total_status');
		
		if (isset($this->request->post['payment_method'])
		&& isset($this->session->data['payment_methods'][$this->request->post['payment_method']])) {
			if(isset($this->session->data['payment_method']['code'])){
			
				$valid_session = strripos($this->session->data['payment_method']['code'], '_');
				$valid_post = strripos($this->request->post['payment_method'], '_');
				
				if($valid_session == true){
					list($name_session,$else_session) = explode('_', $this->session->data['payment_method']['code']);
				}else{
					$name_session = 'not_shiptor';
				}
				
				if($valid_post == true){
					list($name_post,$else_post) = explode('_', $this->request->post['payment_method']);
				}else{
					$name_post = 'not_shiptor';
				}
				
				if($name_post != 'shiptor'){
					$name_post = 'not_shiptor';
				}
				
				if($name_session != 'shiptor'){
					$name_session = 'not_shiptor';
				}
				
				if($name_session != $name_post){
					$this->_templateData['warning_recalculate'] = true;
				}else{
					$this->_templateData['warning_recalculate'] = false;
				}
			}else{
				$this->_templateData['warning_recalculate'] = false;
			}
			
			
			if($this->session->data['simple']['payment_address']['iso_code_2'] == 'RU'){
				unset($this->session->data['payment_method']['code']);
				$this->session->data['payment_method']['code'] = $this->request->post['payment_method'];
			}else{
				unset($this->session->data['payment_method']['code']);
			}
			
		}else{
			$this->_templateData['warning_recalculate'] = false;
		}
		
		/* Shiptor - агрегатор доставки */

		]]></add>
	</operation>
	
	<operation error="skip">
		<search trim="true"><![CDATA[empty($this->request->post['shipping_method_checked'])]]></search>
		<add position="after"><![CDATA[

		/* Shiptor - агрегатор доставки */

		$this->getShiptorValidate($this->request->post['shipping_method_checked']);

		/* Shiptor - агрегатор доставки */

		]]></add>
	</operation>
        	
	<operation error="skip">
		<search trim="true"><![CDATA[isset($this->request->post['shipping_method'])]]></search>
		<add position="after"><![CDATA[

		/* Shiptor - агрегатор доставки */

		$this->getShiptorValidate($this->request->post['shipping_method']);

		/* Shiptor - агрегатор доставки */

		]]></add>
	</operation>
        
	<operation error="skip">
		<search trim="true"><![CDATA[$this->setOutputContent]]></search>
		<add position="after" offset="1"><![CDATA[

		/* Shiptor - агрегатор доставки */

		private function getShiptorValidate($shipping_method) {
			$this->language->load('checkout/simplecheckout');

			$this->load->model('extension/shipping/shiptor');

			if ($shipping = $this->model_extension_shipping_shiptor->getValidate($shipping_method)) {
				if ($shipping['shipping'] == 'P') {
					if (! isset($this->session->data['shiptor']['address']['courier_id']) || ! isset($this->session->data['shiptor']['address']['point_id']) || (isset($this->session->data['shiptor']['address']['courier_id']) && $shipping['courier_id'] != $this->session->data['shiptor']['address']['courier_id'])) {
						$this->_templateData['has_error_shipping'] = true;
						$this->_templateData['error_shipping']     = $this->language->get('error_shipping_point');
						$this->simplecheckout->addError('shipping');
					}
				} else if ($shipping['shipping'] == 'A') {	
					unset($this->session->data['shiptor']['address']);
					$this->session->data['shiptor']['address']['courier_id'] = $shipping['courier_id'];
				} else {
					//unset($this->session->data['shiptor']);
				}
			} else {
				//unset($this->session->data['shiptor']);
			}
		}

		/* Shiptor - агрегатор доставки */

		]]></add>
	</operation>
</file>

<file path="catalog/controller/account/register.php">	
	<operation error="skip">
		<search trim="true"><![CDATA[$this->document->addStyle('catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css');]]></search>
		<add position="after"><![CDATA[
			/* Shiptor - агрегатор доставки */
			$this->document->addStyle('catalog/view/javascript/shipping/shiptor.css');
			$this->document->addStyle('catalog/view/javascript/shipping/kladr/css/jquery.kladr.min.css');
			$this->document->addScript('catalog/view/javascript/shipping/kladr/js/jquery.kladr.min.js');	
			$this->document->addScript('catalog/view/javascript/shipping/shiptor.js');
			/* Shiptor - агрегатор доставки */
		]]></add>
	</operation>
</file>
<file path="catalog/controller/account/address.php">	
	<operation error="skip">
		<search trim="true"><![CDATA[$this->document->addStyle('catalog/view/javascript/jquery/datetimepicker/bootstrap-datetimepicker.min.css');]]></search>
		<add position="after"><![CDATA[
			/* Shiptor - агрегатор доставки */
			$this->document->addStyle('catalog/view/javascript/shipping/shiptor.css');
			$this->document->addStyle('catalog/view/javascript/shipping/kladr/css/jquery.kladr.min.css');
			$this->document->addScript('catalog/view/javascript/shipping/kladr/js/jquery.kladr.min.js');	
			$this->document->addScript('catalog/view/javascript/shipping/shiptor.js');
			/* Shiptor - агрегатор доставки */
		]]></add>
	</operation>
</file>
<file path="catalog/controller/account/simpleregister.php">	
	<operation error="skip">
		<search trim="true"><![CDATA[$this->_templateData['simple_footer'] = $this->simpleregister->getLinkToFooterTpl();]]></search>
		<add position="after"><![CDATA[
			/* Shiptor - агрегатор доставки */
			$this->document->addStyle('catalog/view/javascript/shipping/shiptor.css');
			$this->document->addStyle('catalog/view/javascript/shipping/kladr/css/jquery.kladr.min.css');
			$this->document->addScript('catalog/view/javascript/shipping/kladr/js/jquery.kladr.min.js');	
			$this->document->addScript('catalog/view/javascript/shipping/shiptor.js');
			/* Shiptor - агрегатор доставки */
		]]></add>
	</operation>
</file>
<file path="catalog/controller/account/simpleaddress.php">	
	<operation error="skip">
		<search trim="true"><![CDATA[$this->_templateData['simple_footer'] = $this->simpleaddress->getLinkToFooterTpl();]]></search>
		<add position="after"><![CDATA[
			/* Shiptor - агрегатор доставки */
			$this->document->addStyle('catalog/view/javascript/shipping/shiptor.css');
			$this->document->addStyle('catalog/view/javascript/shipping/kladr/css/jquery.kladr.min.css');
			$this->document->addScript('catalog/view/javascript/shipping/kladr/js/jquery.kladr.min.js');	
			$this->document->addScript('catalog/view/javascript/shipping/shiptor.js');
			/* Shiptor - агрегатор доставки */
		]]></add>
	</operation>
</file>
<file path="catalog/language/*/checkout/checkout.php">	
	<operation error="skip">
		<search trim="true"><![CDATA[$_['error_custom_field']]]></search>
		<add position="after"><![CDATA[

		/* Shiptor - агрегатор доставки */

		$_['error_shipping_point'] = 'Выберите пункт назначение доставки!';

		/* Shiptor - агрегатор доставки */

		]]></add>
	</operation>
</file>

<file path="catalog/controller/checkout/simplecheckout.php">	
<operation error="skip">
		<search trim="true"><![CDATA[ public function index($args = null) {]]></search>
		<add position="after"><![CDATA[
		/* Shiptor - агрегатор доставки */

		if(empty($this->request->post) && ($this->config->get('progroman_cm_status'))){
			$this->session->data['validate_kladr'] = 1;	
		}else{
			$this->session->data['validate_kladr'] = 0;	
		}
		
		/* Shiptor - агрегатор доставки */
		]]></add>
	</operation>
	<operation error="skip">
		<search trim="true"><![CDATA[class ControllerCheckoutSimpleCheckout extends SimpleController {]]></search>
		<add position="after"><![CDATA[
		/* Shiptor - агрегатор доставки */
		
		public function __construct($registry) {
			parent::__construct($registry);
			
			$registry->set('shiptor', new Shiptor($registry));
		}
		
		/* Shiptor - агрегатор доставки */
		]]></add>
	</operation>
	<operation error="skip">
		<search trim="true"><![CDATA[$this->renderPage('checkout/simplecheckout']]></search>
		<add position="before"><![CDATA[

		/* Shiptor - агрегатор доставки */
		
		$this->load->model('extension/shipping/shiptor');
		define('HTTPS_CATALOG', HTTPS_SERVER);
		
		if ($this->config->get('shiptor_auto_send')) {
			
			if(!$this->config->get('shiptor_time_auto')){
				$this->model_extension_shipping_shiptor->updateTimeAuto();
			}elseif($this->config->get('shiptor_time_auto') < time()){
				$this->model_extension_shipping_shiptor->updateTimeAuto();
				
				if($this->config->get('shiptor_validate_period')){
					$pack_orders = $this->model_extension_shipping_shiptor->getDateOrders($this->config->get('shiptor_validate_period'));
					$this->model_extension_shipping_shiptor->getDateOrdersCourierGroup($this->config->get('shiptor_validate_period'));
				}else{
					$pack_orders = $this->model_extension_shipping_shiptor->getDateOrders(604800);
					$this->model_extension_shipping_shiptor->getDateOrdersCourierGroup(604800);
				}
				
				if(!empty($pack_orders)){
					foreach($pack_orders as $order){
						$json = array();
						
						$order_id = $order['order_id'];
				
						$params = array();
							
						$params['external_id'] = $order_id;
						
						$order = $this->model_extension_shipping_shiptor->getOrderEditShiptor($order_id);

						$params['delivery_time'] = $order['time'];

						$weight = trim($order['weight']);

						if ($weight && is_numeric($weight)) {
							$params['weight'] = (float)$weight;
						}

						$shipping_method = trim($order['shipping_method']);

						if ($shipping_method && is_numeric($shipping_method)) {
							$params['shipping_method'] = $shipping_method;
						} else {
							$json['error']['shipping'] = $this->language->get('error_is_shipping') . '. Номер заказа: ' . $order_id;
						}
							
						if(stristr($order['shipping_code'],'shiptor.russian-post-') && $order['lastname']==''){
							$json['error']['shipping'] = $this->language->get('error_is_surname') . '. Номер заказа: ' . $order_id;
						}

						$delivery_point = trim($order['delivery_point']);

						if ($delivery_point) {
							$params['delivery_point'] = $delivery_point;
						} else {
							if ($order['street']) {
								$params['street'] = trim($order['street']);
							} else if ($order['shipping_address_1']) {
								$this->model_extension_shipping_shiptor->editOrder($order_id, array('street' => trim($order['shipping_address_1'])));

								$params['street'] = trim($order['shipping_address_1']);
							}

							if ($order['house']) {
								$params['house'] = trim($order['house']);
							}

							if ($order['apartment']) {
								$params['apartment'] = trim($order['apartment']);
							}
								
							if ($order['shipping_postcode']) {
								$params['postal_code'] = trim($order['shipping_postcode']);
							}
						}

						if ($order['firstname']) {
							$params['name'] = $order['firstname'];
						}

						if ($order['lastname']) {
							$params['surname'] = $order['lastname']!=''?$order['lastname']:$order['firstname'];
						}
						else{
							$params['surname'] = $order['firstname'];
						}

						$email = utf8_strtolower(trim($order['email']));

						if (filter_var($email, FILTER_VALIDATE_EMAIL)) {
							$params['email'] = $email;
						} else {
							$json['error']['email'] = $this->language->get('error_is_email') . '. Номер заказа: ' . $order_id;
						}

						if ($order['telephone']) {
							if (preg_match('/^(\s*)?(\+)?([- _():=+]?\d[- _():=+]?){10,14}(\s*)?$/ui', $order['telephone'])) {
								$params['phone'] = trim($order['telephone']);
							} else {
								$json['error']['telephone'] = $this->language->get('error_is_telephone') . '. Номер заказа: ' . $order_id;
							}
						}

						$kladr_id = trim($order['kladr_id']);

						if ($kladr_id) {
							$params['kladr_id'] = $kladr_id;
						} else {
							$json['error']['kladr_id'] = $this->language->get('error_is_kladr') . '. Номер заказа: ' . $order_id;
						}

						// вычисляем наложенный платеж и объявленную стоимость

						if ($order['total']) {
							$params['declared_cost'] = round($order['total'], $this->currency->getDecimalPlace($this->config->get('config_currency')));

							$params['cod'] = (false !== strpos($order['payment_code'], 'shiptor_')) ? round($order['total'], $this->currency->getDecimalPlace($this->config->get('config_currency'))) : 0;
						}

						if ($order['payment_code'] == 'shiptor_paycard') {
							$params['cashless_payment'] = 1;
						}
							
						// Пока отправляем только RU
						if ($order['country']) {
							$params['country_code'] = $order['country'];
						}
							
						if ($order['shipping_zone']) {
							$params['administrative_area'] = $order['shipping_zone'];
						}
							
						if ($order['shipping_city']) {
							$params['settlement'] = $order['shipping_city'];
						}

						// проверка наличия услуги с артикулом магазина (если нет - создаем)
						// артикул = url сайта
						
						$shop_article = mb_substr(HTTPS_CATALOG, 0, 64);

						if (!$this->shiptor->checkServiceByArticle($shop_article)) {
							$data = array('name' => $this->language->get('text_shipping'), 'shopArticle' => $shop_article, 'price' => 0);
							$this->shiptor->addService($data);
						}

						if ($products = $this->model_extension_shipping_shiptor->productsOrder($order_id)) {
							$this->load->model('catalog/product');

							// передаем номенклатуру

							foreach ($products as $product) {
								$product_info = $this->model_catalog_product->getProduct($product['product_id']);
								// TODO: проверить, откуда данные - из product или product_info
								
								$shopArticle = '';
								$name = $product['name'];
								if(($this->config->get('shiptor_id_product')) && (!empty($product_info['sku']))){
									$shopArticle = $product_info['sku'];
									$product_options = $this->model_extension_shipping_shiptor->productOptionsOrder($order_id, $product['order_product_id']);
									if(!empty($product_options)){
										foreach($product_options as $option){
											$shopArticle .= '-' . $option['value'];
											$name .= '-' . $option['value'];
										}
									}
								}elseif(($this->config->get('shiptor_id_product') == 0) && (!empty($product['model']))){
									$shopArticle = $product['model'];
									$product_options = $this->model_extension_shipping_shiptor->productOptionsOrder($order_id, $product['order_product_id']);
									if(!empty($product_options)){
										foreach($product_options as $option){
											$shopArticle .= '-' . $option['value'];
											$name .= '-' . $option['value'];
										}
									}
								}elseif(!empty($product['sku'])){
									$shopArticle = $product_info['sku'];
									$product_options = $this->model_extension_shipping_shiptor->productOptionsOrder($order_id, $product['order_product_id']);
									if(!empty($product_options)){
										foreach($product_options as $option){
											$shopArticle .= '-' . $option['value'];
											$name .= '-' . $option['value'];
										}
									}
								}else{
									$shopArticle = $product['model'];
									$product_options = $this->model_extension_shipping_shiptor->productOptionsOrder($order_id, $product['order_product_id']);
									if(!empty($product_options)){
										foreach($product_options as $option){
											$shopArticle .= '-' . $option['value'];
											$name .= '-' . $option['value'];
										}
									}
								}

								$product_shiptor_params = array(
									'name'          => $name,
									'article'       => empty($product['sku']) ? '' : $product['sku'],
									'shopArticle'   => $shopArticle,
									'length'		=> empty($product['length']) ? '' : $this->length->convert($product['length'], 1, 1),
									'width'         => empty($product['width']) ? '' : $this->length->convert($product['width'],  1, 1),
									'height'        => empty($product['height']) ? '' : $this->length->convert($product['height'], 1, 1),
									'weight'        => empty($product['weight']) ? '' : $this->length->convert($product['weight'], 1, 1),
									'price'         => round($product['price'], $this->currency->getDecimalPlace($this->config->get('config_currency'))),
								);
								
								$this->shiptor->addProduct($product_shiptor_params);
							}

							// если товар один, и указаны его размеры - берем их
							// если товар один, и размеров нет - ставим нули, в библиотеке подставятся дефолтные размеры
							// если товаров несколько - пропускаем блок, в библиотеке подставятся дефолтные размеры

							if($this->config->get('shiptor_size')){
								$params['width'] = $this->config->get('shiptor_default_width');
								$params['length'] = $this->config->get('shiptor_default_length');
								$params['height'] = $this->config->get('shiptor_default_height');
							}elseif (1 == sizeof($products)) {
								$product = reset($products);
								
								if (1 == $product['quantity']) {
									$product_info = $this->model_catalog_product->getProduct($product['product_id']);
									$params = array_merge($params,$this->model_extension_shipping_shiptor->length($product_info));
									
									if($params['width'] > 0){
										$params['width'] = $params['width'];
									}else{
										$params['width'] = $this->config->get('shiptor_default_width');
									}
									
									if($params['length'] > 0){
										$params['length'] = $params['length'];
									}else{
										$params['length'] = $this->config->get('shiptor_default_length');
									}
									
									if($params['height'] > 0){
										$params['height'] = $params['height'];
									}else{
										$params['height'] = $this->config->get('shiptor_default_height');
									}
								}else{
									$product_info = $this->model_catalog_product->getProduct($product['product_id']);
									$params = array_merge($params,$this->model_extension_shipping_shiptor->length($product_info));
									if($params['width'] > 0){
										$width = $params['width'];
									}else{
										$width = $this->config->get('shiptor_default_width');
									}
									
									if($params['length'] > 0){
										$length = $params['length'];
									}else{
										$length = $this->config->get('shiptor_default_length');
									}
									
									if($params['height'] > 0){
										$height = $params['height'];
									}else{
										$height = $this->config->get('shiptor_default_height');
									}
									
									$array_max_volume_product[] = $height;
									$array_max_volume_product[] = $length;
									$array_max_volume_product[] = $width;
									
									$max_volume_product = max($array_max_volume_product);
									$sumV = $height*$length*$width*$product['quantity'];
									$sumVQ = pow($sumV, 1/3);
									$sumVQ = ceil($sumVQ);
									
									if($sumVQ > $max_volume_product){
										$params['height'] = $sumVQ;
										$params['length'] = $sumVQ;
										$params['width'] = $sumVQ;
									}else{
										$params['length'] = $max_volume_product;
										$params['width'] = sqrt($sumV/$max_volume_product);
										$params['height'] = sqrt($sumV/$max_volume_product);
									}
								}
							}else{
								$sumV = 0;
								
								foreach($products as $product){
									$product_info = $this->model_catalog_product->getProduct($product['product_id']);
									$params = array_merge($params,$this->model_extension_shipping_shiptor->length($product_info));
									
									if($params['width'] > 0){
										$width = $params['width'];
									}else{
										$width = $this->config->get('shiptor_default_width');
									}
									
									if($params['length'] > 0){
										$length = $params['length'];
									}else{
										$length = $this->config->get('shiptor_default_length');
									}
									
									if($params['height'] > 0){
										$height = $params['height'];
									}else{
										$height = $this->config->get('shiptor_default_height');
									}
									
									$array_max_volume_product[] = $height;
									$array_max_volume_product[] = $length;
									$array_max_volume_product[] = $width;
									
									$sumV += $height*$length*$width*$product['quantity'];
								}
								
								
								$max_volume_product = max($array_max_volume_product);
								
								$height = 0;
								$length = 0;
								$width = 0;
								
								$sumVQ = pow($sumV, 1/3);
								$sumVQ = ceil($sumVQ);
								
								if($sumVQ > $max_volume_product){
									$params['height'] = $sumVQ;
									$params['length'] = $sumVQ;
									$params['width'] = $sumVQ;
								}else{
									$params['length'] = $max_volume_product;
									$params['width'] = sqrt($sumV/$max_volume_product);
									$params['height'] = sqrt($sumV/$max_volume_product);
								}
							}
							
							$params['length'] = ceil($params['length']);
							$params['width'] = ceil($params['width']);
							$params['height'] = ceil($params['height']);

							# Cписок продуктов
							$params['products'] = array();
							
							// Coupon
							$order_total = $this->model_extension_shipping_shiptor->totalOrder($order_id);
							if(!empty($order_total)){
								preg_match('#\((.*?)\)#', $order_total['title'], $title);
								$coupon_info = $this->model_extension_shipping_shiptor->getCoupon($title[1]);
								$discount = (int)$coupon_info['discount'];
							}else{
								$coupon_info = array();
							}

							foreach ($products as $product) {
								$product_info = $this->model_catalog_product->getProduct($product['product_id']);
								$shopArticle = '';
								$price = $product['price'];
								if(!empty($coupon_info) && $discount > 0){
									if($coupon_info['type'] == 'P'){
										$price = $price*$discount/100;
									}elseif($coupon_info['type'] == 'F'){
										if($product['quantity'] > 1){
											if(($price*$product['quantity']) > $discount){
												$price = (($price*$product['quantity']) - $discount)/$product['quantity'];
												$discount = 0;
											}else{
												$discount = $discount - ($price*$product['quantity']);
												$price = 0;
											}
										}else{
											if($price > $discount){
												$price = $price - $discount;
												$discount = 0;
											}else{
												$discount = $discount - $price;
												$price = 0;
											}
										}
									}
								}
								
								if(($this->config->get('shiptor_id_product')) && (!empty($product_info['sku']))){
									$shopArticle = $product_info['sku'];
									$product_options = $this->model_extension_shipping_shiptor->productOptionsOrder($order_id, $product['order_product_id']);
									if(!empty($product_options)){
										foreach($product_options as $option){
											$shopArticle .= '-' . $option['value'];
										}
									}
								}elseif(($this->config->get('shiptor_id_product') == 0) && (!empty($product['model']))){
									$shopArticle = $product['model'];
									$product_options = $this->model_extension_shipping_shiptor->productOptionsOrder($order_id, $product['order_product_id']);
									if(!empty($product_options)){
										foreach($product_options as $option){
											$shopArticle .= '-' . $option['value'];
										}
									}
								}elseif(!empty($product['sku'])){
									$shopArticle = $product_info['sku'];
									$product_options = $this->model_extension_shipping_shiptor->productOptionsOrder($order_id, $product['order_product_id']);
									if(!empty($product_options)){
										foreach($product_options as $option){
											$shopArticle .= '-' . $option['value'];
										}
									}
								}else{
									$shopArticle = $product['model'];
									$product_options = $this->model_extension_shipping_shiptor->productOptionsOrder($order_id, $product['order_product_id']);
									if(!empty($product_options)){
										foreach($product_options as $option){
											$shopArticle .= '-' . $option['value'];
										}
									}
								}
							
								if (empty($product['quantity'])) {
									$json['error']['product'] = $this->language->get('error_is_quantity') . '. Номер заказа: ' . $order_id;
									continue;
								}

								if (empty($product['price'])) {
									$json['error']['product'] = $this->language->get('error_is_price') . '. Номер заказа: ' . $order_id;
									continue;
								}

								$params['products'][] = array(
									'shopArticle' => $shopArticle,
									'count'       => (int)$product['quantity'],
									'price'       => round($price, $this->currency->getDecimalPlace($this->config->get('config_currency')))
								);
							}
						}
							
						if (! $json) {
							
							$shiptor = $this->shiptor->addPackage($params);
							if (! empty($shiptor)) {
							
								if($shiptor['status'] == 'new' && $this->config->get('shiptor_order_status_after_api_new') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_new'));
								}elseif($shiptor['status'] == 'waiting-pickup' && $this->config->get('shiptor_order_status_after_api_waiting_pickup') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_waiting_pickup'));
								}elseif($shiptor['status'] == 'waiting-send' && $this->config->get('shiptor_order_status_after_api_waiting_send') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_waiting_send'));
								}elseif($shiptor['status'] == 'arrived-to-warehouse' && $this->config->get('shiptor_order_status_after_api_arrived_to_warehouse') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_arrived_to_warehouse'));
								}elseif($shiptor['status'] == 'packed' && $this->config->get('shiptor_order_status_after_api_packed') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_packed'));
								}elseif($shiptor['status'] == 'prepared-to-send' && $this->config->get('shiptor_order_status_after_api_prepared_to_send') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_prepared_to_send'));
								}elseif($shiptor['status'] == 'sent' && $this->config->get('shiptor_order_status_after_api_sent') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_sent'));
								}elseif($shiptor['status'] == 'delivered' && $this->config->get('shiptor_order_status_after_api_delivered') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_delivered'));
								}elseif($shiptor['status'] == 'waiting-on-delivery-point' && $this->config->get('shiptor_order_status_after_api_waiting_on_delivery_point') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_waiting_on_delivery_point'));
								}elseif($shiptor['status'] == 'removed' && $this->config->get('shiptor_order_status_after_api_removed') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_removed'));
								}elseif($shiptor['status'] == 'returned' && $this->config->get('shiptor_order_status_after_api_returned') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_returned'));
								}elseif($shiptor['status'] == 'reported' && $this->config->get('shiptor_order_status_after_api_reported') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_reported'));
								}elseif($shiptor['status'] == 'lost' && $this->config->get('shiptor_order_status_after_api_lost') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_lost'));
								}elseif($shiptor['status'] == 'resend' && $this->config->get('shiptor_order_status_after_api_resend') > 0){
									$this->model_extension_shipping_shiptor->addOrderHistory($order_id, $this->config->get('shiptor_order_status_after_api_resend'));
								}
								$this->model_extension_shipping_shiptor->editOrder($order_id, array('shiptor_id' => $shiptor['id']));			
							}
						}
					}
				}
				
			}
		}

		$this->_templateData['times'] = array();

		if ($this->config->get('shiptor_time') && isset($this->session->data['shipping_method']['code'])) {

			$shipping = $this->model_extension_shipping_shiptor->getValidate($this->session->data['shipping_method']['code']);

			if (! empty($shipping)) {
				if ($shipping['courier'] == 'shiptor' && $shipping['shipping'] == 'A') {
					$this->_templateData['times'] = $this->shiptor->getDaysOff()?$this->shiptor->getDeliveryTime():array();

					$this->_templateData['terms'] = 0;

					if (isset($this->session->data['shiptor']['terms'])) {
						$this->_templateData['terms'] = $this->session->data['shiptor']['terms'];
					}
				}else{
					unset($this->session->data['shiptor']['terms']);
				}
			}
		}
		$this->document->addStyle('catalog/view/javascript/shipping/shiptor.css');
		$this->document->addStyle('catalog/view/javascript/shipping/kladr/css/jquery.kladr.min.css');

		$this->document->addScript('//api-maps.yandex.ru/2.1/?lang=ru_RU');
		$this->document->addScript('//cdnjs.cloudflare.com/ajax/libs/jquery-scrollTo/2.1.2/jquery.scrollTo.min.js');
		$this->document->addScript('catalog/view/javascript/shipping/kladr/js/jquery.kladr.min.js');	
		$this->document->addScript('catalog/view/javascript/shipping/shiptor.js');

		/* Shiptor - агрегатор доставки */

		]]></add>
	</operation>
	<operation error="skip">
		<search trim="true"><![CDATA[$this->session->data['order_id'] = $order_id;]]></search>
		<add position="before"><![CDATA[

		/* Shiptor - агрегатор доставки */
		
		if(isset($order_id, $this->session->data['shiptor'])) {
			$this->load->model('extension/shipping/shiptor');
			$this->model_extension_shipping_shiptor->setOrder($order_id);
		}

		/* Shiptor - агрегатор доставки */

		]]></add>
	</operation>
</file>

<file path="catalog/view/theme/*/template/checkout/simplecheckout.tpl">	
	<operation error="skip">
		<search trim="true"><![CDATA[!$block_order]]></search>
		<add position="after"><![CDATA[

		<?php if ($times) { ?>
		<!-- Shiptor - агрегатор доставки -->
		<span id="shiptor-time"><span>Время доставки</span> 
			<select onchange="Shiptor.time(this.value);" class="form-control">
				<option value="0"> -- выберите время -- </option>	
				<?php foreach ($times as $time => $value) { ?>
				<?php if ($time == $terms) { ?>
				<option value="<?php echo $time; ?>" selected="selected"><?php echo $value; ?></option>
				<?php } else { ?>
				<option value="<?php echo $time; ?>"><?php echo $value; ?></option>
				<?php } ?>
				<?php } ?>
			</select>
		</span>
		<!-- / Shiptor - агрегатор доставки -->
		<?php } ?>

		]]></add>
	</operation>
	<operation error="skip">
		<search trim="true"><![CDATA[<a class="button btn-primary button_oc btn" <?php echo $block_order ? 'disabled' : '' ?>]]></search>
		<add position="before"><![CDATA[

		<?php if ($times) { ?>
		<!-- Shiptor - агрегатор доставки -->
		<span id="shiptor-time"><span>Время доставки</span> 
			<select onchange="Shiptor.time(this.value);" class="form-control">
				<option value="0"> -- выберите время -- </option>	
				<?php foreach ($times as $time => $value) { ?>
				<?php if ($time == $terms) { ?>
				<option value="<?php echo $time; ?>" selected="selected"><?php echo $value; ?></option>
				<?php } else { ?>
				<option value="<?php echo $time; ?>"><?php echo $value; ?></option>
				<?php } ?>
				<?php } ?>
			</select>
		</span>
		<!-- / Shiptor - агрегатор доставки -->
		<?php } ?>

		]]></add>
	</operation>
</file>

<file path="catalog/view/theme/*/template/checkout/simplecheckout_shipping.tpl">	
	<operation error="skip"> 
		<search trim="true"><![CDATA[<input type="radio" data-onchange="reloadAll" name="shipping_method" <?php echo !empty($quote['dummy']) ? 'disabled="disabled"' : '' ?> <?php echo !empty($quote['dummy']) ? 'data-dummy="true"' : '' ?> value="<?php echo $quote['code']; ?>" id="<?php echo $quote['code']; ?>" <?php if ($quote['code'] == $code) { ?>checked="checked"<?php } ?> />]]></search>
		<add position="replace"><![CDATA[
		<input type="radio" <?php echo empty($quote['courier']) ? 'class="reload-courier"' : '' ?> data-onchange="reloadAll" name="shipping_method" <?php echo !empty($quote['dummy']) ? 'disabled="disabled"' : '' ?> <?php echo !empty($quote['dummy']) ? 'data-dummy="true"' : '' ?> value="<?php echo $quote['code']; ?>" id="<?php echo $quote['code']; ?>" <?php if ($quote['code'] == $code) { ?>checked="checked"<?php } ?> />
		]]></add>
	</operation>
	<operation error="skip">
		<search trim="true" index="0"><![CDATA[for="<?php echo $quote['code']; ?>"]]></search>
		<add position="replace"><![CDATA[
		for="<?php echo $quote['code']; ?>" <?php echo ! empty($quote['courier']) ? 'class="shiptor-courier"' : '' ?>
		]]></add>
	</operation>
	<operation error="skip">
		<search trim="true"><![CDATA[class="form-group"]]></search>
		<add position="replace"><![CDATA[class="form-group simple-description"]]></add>
	</operation>
	<operation error="skip">
		<search trim="true"><![CDATA[<div class="checkout-heading panel-heading"><?php echo $text_checkout_shipping_method ?></div>]]></search>
		<add position="replace"><![CDATA[<div id="remove-success" class="checkout-heading panel-heading"><?php echo $text_checkout_shipping_method ?></div>]]></add>
	</operation>
	<operation error="skip">
		<search trim="true"><![CDATA[<div class="simplecheckout-block-content">]]></search>
		<add position="before"><![CDATA[
	<?php if($warning_recalculate == true && !empty($shiptor_total_status)){ ?>
	<div style="margin-top:10px;" class="col-sm-12"><div class="alert alert-info alert-dismissible fade in" role="alert"><strong>Стоимость доставки изменилась!</strong></div></div>
	<?php } ?>
	]]></add>
	</operation>
	<operation error="skip">
		<search trim="true"><![CDATA[<div class="simplecheckout-warning-text"><?php echo $error_no_shipping; ?></div>]]></search>
		<add position="after" offset="3"><![CDATA[
	<script type="text/javascript">
		function scrollToElement(theElement) {
			if (typeof theElement === "string") theElement = document.getElementById(theElement);

			var selectedPosX = 0;
			var selectedPosY = 0;

			while (theElement != null) {
				selectedPosX += theElement.offsetLeft;
				selectedPosY += theElement.offsetTop;
				theElement = theElement.offsetParent;
			}

			window.scrollTo(selectedPosX, selectedPosY);
		}

		<?php if($warning_recalculate == true && !empty($shiptor_total_status)){ ?>
			scrollToElement('remove-success');
		<?php } ?>
	</script>
	]]></add>
	</operation>
</file>
<file path="catalog/model/account/customer.php">	
	<operation error="skip">
		<search trim="true"><![CDATA[$this->load->language('mail/customer');]]></search>
		<add position="before"><![CDATA[
		$this->db->query('INSERT INTO `' . DB_PREFIX . 'shipping_shiptor_address` SET `address_id` = ' . (int)$address_id . ', `customer_id` = ' . (int)$customer_id . ', `kladr_id` = \'' . $this->db->escape($this->session->data['shiptor']['kladr_id']) . '\' ON DUPLICATE KEY UPDATE `customer_id` = ' . (int)$customer_id . ',`kladr_id` = "' . $this->db->escape($this->session->data['shiptor']['kladr_id']) . '"');
		]]></add>
	</operation>
</file>
<file path="catalog/model/account/address.php">	
	<operation error="skip">
		<search trim="true"><![CDATA[$address_id = $this->db->getLastId();]]></search>
		<add position="after"><![CDATA[
		$this->db->query('INSERT INTO `' . DB_PREFIX . 'shipping_shiptor_address` SET `address_id` = ' . (int)$address_id . ', `customer_id` = ' . (int)$this->customer->getId() . ', `kladr_id` = "' . $this->db->escape($this->session->data['shiptor']['kladr_id']) . '" ON DUPLICATE KEY UPDATE `customer_id` = ' . (int)$this->customer->getId() . ',`kladr_id` = "' . $this->db->escape($this->session->data['shiptor']['kladr_id']) . '"');
		]]></add>
	</operation>
	<operation error="skip">
		<search trim="true"><![CDATA[public function editAddress($address_id, $data) {]]></search>
		<add position="after"><![CDATA[
		$address_data = $this->getAddress($address_id);
		if($address_data['city']!=$data['city'] || $address_data['zone_id']!=$data['zone_id'] || $address_data['country_id']!=$data['country_id']){
			$this->db->query('INSERT INTO `' . DB_PREFIX . 'shipping_shiptor_address` SET `address_id` = ' . (int)$address_id . ', `customer_id` = ' . (int)$this->customer->getId() . ', `kladr_id` = "' . $this->db->escape($this->session->data['shiptor']['kladr_id']) . '" ON DUPLICATE KEY UPDATE `customer_id` = ' . (int)$this->customer->getId() . ',`kladr_id` = "' . $this->db->escape($this->session->data['shiptor']['kladr_id']) . '"');
		}
		]]></add>
	</operation>
	<operation error="skip">
		<search trim="true"><![CDATA[public function deleteAddress($address_id) {]]></search>
		<add position="after"><![CDATA[
		$this->db->query("DELETE FROM " . DB_PREFIX . "shipping_shiptor_address WHERE address_id = '" . (int)$address_id . "' AND customer_id = '" . (int)$this->customer->getId() . "'");
		]]></add>
	</operation>
</file>
</modification>